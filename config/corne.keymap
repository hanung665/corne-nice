/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&soft_off {
    hold-time-ms = <3000>; // Only turn off it the key is held for 5 seconds or longer.
};

/ {
    macros {
        ctrl_alt_del: ctrl_alt_del {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_ALT &kp DEL>,
                <&macro_release>;

            label = "CTRL_ALT_DEL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC           &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT    &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp TAB
                                &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC         &kp N1        &kp N2        &kp N3             &kp N4           &kp N5          &kp N6      &kp N7    &kp N8    &kp N9           &kp N0    &kp BSPC
&kp LEFT_SHIFT  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2       &bt BT_SEL 3     &bt BT_SEL 4    &bt BT_CLR  &kp DEL   &kp UP    &kp PRINTSCREEN  &kp HOME  &kp PG_UP
&kp C_BRI_DEC   &kp C_BRI_UP  &kp K_MUTE    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &soft_off       &kp CAPS    &kp LEFT  &kp DOWN  &kp RIGHT        &kp END   &kp PG_DN
                                            &kp LGUI           &trans           &kp SPACE       &kp RET     &mo 3     &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC           &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTERISK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LEFT_SHIFT    &kp F1    &kp F2  &kp F3    &kp F4    &kp F5       &kp MINUS  &kp EQUAL  &kp LBKT      &kp RBKT  &kp BSLH  &kp GRAVE
&kp LEFT_CONTROL  &kp F6    &kp F7  &kp F8    &kp F9    &kp F10      &kp UNDER  &kp PLUS   &kp LBRC      &kp RBRC  &kp PIPE  &kp TILDE
                                    &kp LGUI  &to 4     &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&kp C_VOL_UP  &kp F1   &kp F2   &kp F3  &kp F4                &kp F5                  &kp COMMA        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &none            &trans
&kp C_VOL_DN  &kp F6   &kp F7   &kp F8  &kp F9                &kp F10                 &kp RS(KP_DOT)   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS      &kp KP_MINUS
&kp C_MUTE    &kp F11  &kp F12  &none   &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC    &kp KP_NUMBER_0  &kp KP_N1        &kp KP_N2        &kp KP_NUMBER_3  &kp KP_MULTIPLY  &kp KP_DIVIDE
                                &trans  &trans                &trans                  &trans           &trans           &trans
            >;
        };

        layer_4 {
            bindings = <
&to 0             &none  &none  &none      &none           &none     &kp TAB    &kp N7  &kp N8  &kp N9  &kp F2        &kp BACKSPACE
&mo 5             &none  &none  &none      &kp OUT         &none     &kp EQUAL  &kp N4  &kp N5  &kp N6  &kp PLUS      &kp MINUS
&kp LEFT_CONTROL  &none  &none  &soft_off  &studio_unlock  &none     &kp N0     &kp N1  &kp N2  &kp N3  &kp ASTERISK  &kp SLASH
                                &trans     &trans          &trans    &trans     &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&to 0  &none  &none  &none   &none   &none     &none   &none     &kp UP    &none      &none  &none
&none  &none  &none  &none   &none   &none     &none   &kp LEFT  &kp DOWN  &kp RIGHT  &none  &none
&none  &none  &none  &none   &none   &none     &none   &none     &none     &none      &none  &none
                     &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };
    };
};
